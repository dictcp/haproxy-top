#!/bin/bash
# haproxy-top - a dummy script to do better formating for haproxy stats display

if [ $# -eq 0 ]; then
    echo "haproxy-top v0.0.1"
    echo "usage: $0 [MONITOR_SOCKET|MONITOR_URL ..]"
    echo "   eg: haproxy-top.sh /var/run/haproxy/haproxy.sock"
    echo "       haproxy-top.sh :20000/haproxy-monitor http://127.0.0.1:20000/haproxy-monitor"
    exit 0;
fi

if [ $# -gt 1 ]; then
    # check parallel installation
    if ! hash parallel 2>/dev/null ; then
        echo "ERROR: moreutils is not installed."
        exit 1;
    fi
fi

STATS_CMDS="parallel -j 1 -- "

for HAPROXY_ENDPOINT in $@; do
    # if it is socket file and exists
    if [ -S "$HAPROXY_ENDPOINT" ]; then

        # check socat installation
        if ! hash socat 2>/dev/null ; then
            echo "ERROR: socat is not installed."
            exit 1;
        fi

        STATS_CMD="echo show stat | socat - unix-connect:$HAPROXY_ENDPOINT"

    # or assume HTTP monitoring
    else

        # check curl installation
        if ! hash curl 2>/dev/null ; then
            echo "ERROR: curl is not installed."
            exit 1;
        fi

        # shortcut input without hostname
        HAPROXY_URL=$(echo $HAPROXY_ENDPOINT | sed 's/^:/127.0.0.1:/g')
        HAPROXY_URL=$(echo $HAPROXY_URL | sed 's/^http:\/\///g')

        STATS_CMD="curl -s http://$HAPROXY_URL?stats\;csv"
    fi

    if [ $# -gt 1 ]; then
        STATS_CMDS="$STATS_CMDS '$STATS_CMD'"
    else
        STATS_CMDS=$STATS_CMD
    fi

done

# show the interested stat and keep refreshing every 2 secords
watch "$STATS_CMDS | sed 's/^# //g' | grep -vP 'FRONTEND|BACKEND' | tr ',' '\t' | tr ' ' ',' | cut -f 1,2,3-6,14-15,18,22,23,25,37 | column -t"

